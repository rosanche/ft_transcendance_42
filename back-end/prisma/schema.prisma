// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement()) 
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  email String @unique
  hash String?
  pseudo String @unique
  
  isTwoFactorAuthenticationEnabled Boolean @default(false)
  twoFactorAuthenticationSecret String? 

  firstName String?
  lastName String?
  profileImage String?

  legend String?

  nbr_games Int @default(0)
  nbr_wins  Int @default(0)
  nbr_looses  Int @default(0)
  
  goals_f Int @default(0)
  goals_a Int @default(0)

  dem_friendBy User[] @relation("dem_friend")
  myDem_friend  User[] @relation("dem_friend")
  
  friendBy User[] @relation("acce_friend")
  myfriends  User[] @relation("acce_friend")

  blocked User[] @relation("blocked")
  myblocked User[] @relation("blocked")

  channel_creat Channel[] @relation("channelcreat")
  admin_channel Channel[] @relation("channeladmin")
  User_channel Channel[] @relation("channeluser")
  blocked_channel Channel[] @relation("channelblocked")

  mp Mp[] @relation("mpuser")
  mypost  Post[] @relation("mypost")
  
  @@map("user")
}

model Game {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt

  score_1 Int @default(0)
  id_1 Int
  id_2 Int
  @@map("game")
  score_2 Int @default(0)
}

model Channel {
  id Int @id @default(autoincrement())
  createur User @relation("channelcreat", fields: [createurId], references: [id])
  createurId Int
  
  name String @unique()
  hash String?
  private Boolean

  admin User[] @relation("channeladmin")
  users User[] @relation("channeluser")
  blocked User[] @relation("channelblocked")
  post Post[] @relation("channelpost")
  bans Ban[] @relation("channelban")
  @@map("channel")
}


 model Ban {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  timeBan   Int  ?
  finshban  Int ? 
  mute_ban   String
  active    Boolean
  description  String ?
  Channel Channel[] @relation("channelban")
  iduser Int

    @@map("ban")
}

model Mp {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  blocked Boolean
  user User[] @relation("mpuser")
  userId1 Int 
  userId2 Int
  post Post[] @relation("mppost")
  @@map("mp")
}

model Post {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  
  createur User? @relation("mypost",fields: [userId], references: [id])
  userId Int?
  dest Channel? @relation("channelpost", fields: [destById], references: [id])
  mp Mp? @relation("mppost", fields: [mpId], references: [id])
  destById Int?
  mpId Int?
  mesage String
  @@map("post")
}
